{"version":3,"sources":["components/Container/index.js","utils/API.js","utils/TableContext.js","components/SearchForm/index.js","components/TableItem/index.js","components/TableBody/index.js","components/Table/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","children","axios","get","TableContext","React","createContext","SearchForm","context","useContext","htmlFor","onChange","e","handleSearchChange","type","placeholder","TableItem","src","image","alt","firstname","lastname","phone","email","age","TableBody","Table","striped","bordered","hover","employees","headings","map","name","width","style","onClick","handleSorting","toLowerCase","filteredUsers","employee","picture","thumbnail","first","last","cell","dob","id","value","TableContainer","useState","people","order","setEmployees","useEffect","API","then","res","data","results","Provider","event","filter","target","filteredList","item","indexOf","heading","sortedEmployees","sort","a","b","undefined","localeCompare","App","Jumbotron","color","backgroundColor","textAlign","fontFamily","Row","Col","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30d2303e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    getEmployees: function () {\r\n        return axios.get(\r\n            \"https://randomuser.me/api/?results=100&nat=gb\"\r\n        );\r\n    }\r\n};","import React from \"react\";\r\n\r\nconst TableContext = React.createContext({});\r\n\r\nexport default TableContext;","import React, { useContext } from \"react\";\nimport TableContext from \"../../utils/TableContext\";\nimport \"./style.css\";\n\nfunction SearchForm() {\n\n  const context = useContext(TableContext);\n\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={e => context.handleSearchChange(e)}\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in a name to search\"\n        />\n        {/* <button type=\"submit\" className=\"btn btn-success\">\n          Search\n        </button> */}\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\r\n\r\nfunction TableItem(props) {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td><img src={props.image} alt={props.firstname} /></td>\r\n                <td>{props.firstname} {props.lastname}</td>\r\n                <td>{props.phone}</td>\r\n                <td>{props.email}</td>\r\n                <td>{props.age}</td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TableItem;\r\n","import React, { useContext } from \"react\";\r\nimport TableContext from \"../../utils/TableContext\";\r\nimport TableItem from \"../TableItem\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\n\r\nfunction TableBody() {\r\n    const context = useContext(TableContext);\r\n    return (\r\n        <>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        {/* <th>Image</th>\r\n                        <th>Name</th>\r\n                        <th>Phone</th>\r\n                        <th>Email</th>\r\n                        <th>Age</th> */}\r\n                        {context.employees.headings.map(({ name, width }) => {\r\n                            return (\r\n                                <th\r\n                                    className=\"col\"\r\n                                    key={name}\r\n                                    style={{ width }}\r\n                                    onClick={() => {\r\n                                        context.handleSorting(name.toLowerCase());\r\n                                    }}\r\n                                >\r\n                                    {name}\r\n                                    <button className=\"btn pointer\"></button>\r\n                                </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {context.employees.filteredUsers.map(employee => (\r\n                        <TableItem\r\n                            image={employee.picture.thumbnail}\r\n                            firstname={employee.name.first}\r\n                            lastname={employee.name.last}\r\n                            phone={employee.cell}\r\n                            email={employee.email}\r\n                            age={employee.dob.age}\r\n                            key={employee.id.value}\r\n                     />\r\n                    ))}\r\n                    {/* <td><img src={employees.people[0].picture.thumbnail} alt={employees.people[0].name.first}/></td>\r\n                        <td>{employees.people[0].name.first} {employees.people[0].name.last}</td>\r\n                        <td>{employees.people[0].cell}</td>\r\n                        <td>{employees.people[0].email}</td>\r\n                        <td>{employees.people[0].dob.age}</td> */}\r\n\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport SearchForm from '../SearchForm';\r\nimport TableContext from \"../../utils/TableContext\";\r\nimport TableBody from \"../TableBody\";\r\n\r\nfunction TableContainer() {\r\n    // setting the state for the table data\r\n    const [employees, setEmployees] = useState({\r\n        people: [],\r\n        order: \"ascend\",\r\n        filteredUsers: [],\r\n        headings: [\r\n            {\r\n                name: \"Image\", width: \"10%\",\r\n            },\r\n            {\r\n                name: \"Name\", width: \"10%\",\r\n            },\r\n            {\r\n                name: \"Phone\", width: \"20%\",\r\n            },\r\n            {\r\n                name: \"Email\", width: \"20%\",\r\n            },\r\n            {\r\n                name: \"Age\", width: \"10%\",\r\n            },\r\n        ]\r\n    });\r\n\r\n    // function to handle ascending/descending order\r\n    const handleSorting = heading => {\r\n        if (employees.order === \"descend\") {\r\n            setEmployees(\r\n                {\r\n                    order: \"ascend\"\r\n                }\r\n            )\r\n        } else {\r\n            setEmployees(\r\n                {\r\n                    order: \"descend\"\r\n                }\r\n            )\r\n        }\r\n        const compareFnc = (a, b) => {\r\n            if (employees.order === \"ascend\") {\r\n                if (a[heading] === undefined) {\r\n                    return 1;\r\n                } else if (b[heading] === undefined) {\r\n                    return -1;\r\n                } else if (heading === \"name\") {\r\n                    return a[heading].first.localeCompare(b[heading].first);\r\n                } else {\r\n                    return b[heading] - a[heading];\r\n                }\r\n            } else {\r\n                if (a[heading] === undefined) {\r\n                    return 1;\r\n                } else if (b[heading] === undefined) {\r\n                    return -1;\r\n                } else if (heading === \"name\") {\r\n                    return b[heading].first.localeCompare(a[heading].first);\r\n                } else {\r\n                    return b[heading] - a[heading];\r\n                }\r\n            }\r\n        }\r\n        const sortedEmployees = employees.filteredUsers.sort(compareFnc);\r\n\r\n        setEmployees({\r\n            ...employees,\r\n            filteredUsers: sortedEmployees\r\n        });\r\n    };\r\n\r\n    const handleSearchChange = event => {\r\n        const filter = event.target.value;\r\n        const filteredList = employees.people.filter(item => {\r\n            let values = item.name.first.toLowerCase();\r\n            return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n\r\n        setEmployees({\r\n            ...employees,\r\n            filteredUsers: filteredList\r\n        });\r\n    };\r\n\r\n    // api call in useEffect\r\n    useEffect(() => {\r\n        API.getEmployees().then(res => {\r\n            // console.log(res);\r\n            setEmployees({\r\n                ...employees,\r\n                people: res.data.results,\r\n                filteredUsers: res.data.results\r\n            });\r\n            // console.log(employees)\r\n            // console.log(employees.people[0].picture.thumbnail);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <TableContext.Provider value={{ employees, handleSearchChange, handleSorting }}>\r\n                <SearchForm />\r\n                <TableBody />\r\n            </TableContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableContainer;\r\n","import './App.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from './components/Container';\nimport { Col, Row } from 'react-bootstrap';\nimport TableContainer from './components/Table';\n\nfunction App() {\n  const jumboStyle = {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#6495ed\",\n    textAlign: \"center\",\n    fontFamily: \"Arial\"\n  };\n  return (\n    <>\n      <Jumbotron style={jumboStyle}>\n        <h1>Employee Directory</h1>\n      </Jumbotron>\n      <Container>\n        <Row>\n          <Col>\n            <TableContainer />\n          </Col>\n        </Row>\n      </Container>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}